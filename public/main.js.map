{"version":3,"sources":["./src/app/eo/eo.component.ts","./src/app/eo/eo.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/eo-api.service.ts","./src/app/symptoms/symptoms.component.ts","./src/app/symptoms/symptoms.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { List } from '../eo';\nimport { EOAPIService } from '../eo-api.service';\n\n@Component({\n  selector: 'app-eo',\n  templateUrl: './eo.component.html',\n  styleUrls: ['./eo.component.css']\n})\nexport class EoComponent implements OnInit {\n  constructor(public EOAPI: EOAPIService) { }\n  public eoName : string;\n\n  ngOnInit() {\n  this.EOAPI.getOil();\n  }\n}\n","\n<h1>Essential Oils</h1>\n<!-- <p *ngFor=\"let oil of EOAPI.essentialOils\"> {{oil.eo_name}} </p> -->\n\n<!-- <form>\n    <input type=\"text\" name=\"filter\" [(ngModel)]=\"filter\" placeholder=\"Enter Essential Oil Name\" />\n</form> -->\n\n<form>\n    <input (ngModelChange)=\"EOAPI.getEO(eoName)\" type=\"text\" [(ngModel)]=\"eoName\" name=\"eoName\" placeholder=\"Input Essential Oil Name\" />\n    \n  </form>\n\n  <div class=\"container\">\n    <div *ngFor=\"let eo of EOAPI.eoSearch\">\n      <p>{{ eo.eo_name }}</p>\n      \n      <img [src]=\"eo.eo_url\" height=\"50%\" width=\"50%\" />\n      <p>Properties: {{ eo.eo_prop }} </p>\n      <p>Historical Uses: {{ eo.eo_hist_uses }}</p>\n      <p>Body Systems: {{ eo.eo_body_sys }}</p>\n      <p>Aroma Description: {{ eo.eo_aroma_desc }}</p>\n    \n      <p>{{ eo.eo_name }} may be useful on the following symptoms:</p>\n    </div>\n    \n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"assets/freelogo.jpg\">\n<!-- <h1> eSense - It Makes Scents!</h1> -->\n<div>\n<h2>Symptoms Checker</h2>\n    <a href= '/symptoms'> <img src=\"assets/bottleswithherbs.jpg\" alt=\"Symptoms\">\n    </a>\n<h2>Essential Oils Info</h2>\n    <a href= '/eo'> <img src=\"assets/leafdroptobottle.jpg\" alt=\"Essential Oils\">\n    </a>\n</div>\n\n<p>The information provided on this Web site is intended for basic, general informational purposes only. \n    It is not intended as medical advice and it does not include all possible precautions, side effects, \n    or interactions that may occur. The creators of this website do not take responsibility for how you \n    use the information provided. Statements contained on this website have not been evaluated by the FDA. \n    You should conduct thorough research via multiple sources and consult directly with a qualified doctor \n    before using any essential oil or product. Information on this website must not be relied upon for medical, \n    legal, financial or other decisions.  </p>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'final-project';\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n<!-- <app-nav></app-nav> -->\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { SymptomsComponent } from './symptoms/symptoms.component';\nimport { EoComponent } from './eo/eo.component';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SymptomsComponent,\n    EoComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul>\n    <li><a routerLink=\"\">Home</a></li>\n    <li><a routerLink=\"/symptoms\">Symptom Checker</a></li>\n    <li><a routerLink=\"/eo\">Essential Oil Information</a></li>\n  </ul>\n","import { Injectable } from '@angular/core';\nimport { List } from './eo';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({ providedIn: 'root' })\n\nexport class EOAPIService {\n  \n  public essentialOils: List[] = [];\n  public symptoms: List[];\n  public url: string = 'http://localhost:3000/api/';\n  // public url: string = 'https://group-1-final-project-esense.herokuapp.com/api/';\n  eoSearch: List[] = [];\n  sympSearch: List[] = [];\n  subSearch: List[] = [];\n  filter: string = '';\n\n  constructor(private http: HttpClient) {\n    this.essentialOils = [];\n    this.symptoms = [];\n    this.subSearch = [];\n  }\n\n//to get EOs by Name\n  getEO(eoName?: string) {\n    if (eoName) { \n    this.http.get(this.url + `eo/${eoName}`).subscribe(\n      (resp:any) => {\n        this.eoSearch = resp\n      },\n      (error) => {\n        console.log(error);\n        } //else bring back all or top 3 EOs\n      )\n    }\n  }\n//to get ALL oils\n  getOil() {\n    this.essentialOils = [];\n    this.http.get(this.url + 'eo').subscribe(\n      (data) => {\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            const essentialOil = data[key];\n            this.essentialOils.push(essentialOil);\n          }\n        }\n      },\n      (error) => {\n        console.error('there is an error');\n      }\n    );\n  }\n//To get symptom by Name\n  getSymptom(sympName?: string) {\n    if (sympName) { \n    this.http.get(this.url + `symptoms/${sympName}`).subscribe(\n      (resp:any) => {\n        this.sympSearch = resp\n      },\n      (error) => {\n        console.log(error);\n        }\n        //add else to return all symptoms\n      )\n    }\n  }\n//To get sub symptom by symptom name\n  getSubSymptom(sympName?: string) {\n    if (sympName) { \n    this.http.get(this.url + `subsymptoms/${sympName}`).subscribe(\n      (resp:any) => {\n        this.subSearch = resp\n        console.log(\"These are the sub symps: \", resp)\n      },\n      (error) => {\n        console.log(error);\n        }\n        //add else to return all subsymptoms\n      )\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EOAPIService } from '../eo-api.service';\nimport { List } from '../eo';\n\n@Component({\n  selector: 'app-symptoms',\n  templateUrl: './symptoms.component.html',\n  styleUrls: ['./symptoms.component.css']\n})\nexport class SymptomsComponent implements OnInit {\n  public essentialOils: List[];\n  public subSearch: List[];\n  public sympName : string;\n\n  constructor(public EOAPI: EOAPIService) { }\n\n  ngOnInit(): void {\n    this.EOAPI.getSymptom();\n  }\n\n}\n","<!-- <input type=\"text\" name=\"filter\" [(ngModel)]=\"filter\" placeholder=\"Symptoms\"/> -->\n\n<!-- <div class=\"search-wrapper\">\n\n    <div class=\"wrap\">\n    \n        <div class=\"search\">\n           <input type=\"text\" class=\"searchTerm\" [(ngModel)]=\"searchTerm\" placeholder=\"Search over 10 symptoms>\n           <button type=\"submit\" class=\"searchButton\" (click)=\"recipeService.getRecipes(searchTerm)\" routerLink=\"/recipes\">\n             <i class=\"fa fa-search\"></i>\n          </button>\n        </div>\n    </div>\n    </div> -->\n<h1>Symptoms Checker</h1>\n  <form>\n    <input (ngModelChange)=\"EOAPI.getSymptom(sympName)\" type=\"select\" [(ngModel)]=\"sympName\" name=\"sympName\" placeholder=\"Input Symptom\" />\n  </form>\n\n  <select (click)=\"EOAPI.getSubSymptom(sympName)\" name=\"subSymp\">\n    <option *ngFor=\"let sub of EOAPI.subSearch\" >{{sub.sub_symp}}</option>\n  </select>\n\n \n\n<section *ngFor=\"let symptom of EOAPI.sympSearch\">\n  <p> {{symptom.symp_name}} </p>\n  <p> Description: {{symptom.symp_desc}}</p>\n  <p> These Essential Oils may be helpful:</p>\n  <p> Topical Application: {{symptom.topical_appl}}</p>\n  <p> Aromatic Application: {{symptom.aromatic_appl}} </p>\n</section>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport { SymptomsComponent} from './symptoms/symptoms.component';\nimport { EoComponent} from './eo/eo.component';\n  \nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'symptoms', component: SymptomsComponent},\n  {path: 'eo', component: EoComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
