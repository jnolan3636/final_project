{"version":3,"sources":["./src/app/eo/eo.component.ts","./src/app/eo/eo.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/symptom-list/symptom-list.component.ts","./src/app/symptom-list/symptom-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/eo-api.service.ts","./src/app/symptoms/symptoms.component.ts","./src/app/symptoms/symptoms.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { List } from '../eo';\r\nimport { EOAPIService } from '../eo-api.service';\r\n\r\n@Component({\r\n  selector: 'app-eo',\r\n  templateUrl: './eo.component.html',\r\n  styleUrls: ['./eo.component.css']\r\n})\r\nexport class EoComponent implements OnInit {\r\n  \r\n  public eoName : string;\r\n  public show : boolean = false;\r\n  public buttonName:any = 'Show Properties';\r\n \r\n  constructor(public EOAPI: EOAPIService) { }\r\n\r\n  ngOnInit() {\r\n  this.EOAPI.getOil();\r\n  }\r\n\r\n  toggle() {\r\n    this.show = !this.show;\r\n    if(this.show)\r\n      this.buttonName = \"Hide Properties\";\r\n    else\r\n      this.buttonName = \"Show Properties\";\r\n  }\r\n}\r\n","\r\n<h1>Essential Oils</h1>\r\n<!-- <p *ngFor=\"let oil of EOAPI.essentialOils\"> {{oil.eo_name}} </p> -->\r\n\r\n<!-- <form>\r\n    <input type=\"text\" name=\"filter\" [(ngModel)]=\"filter\" placeholder=\"Enter Essential Oil Name\" />\r\n</form> -->\r\n\r\n<form>\r\n    <input (ngModelChange)=\"EOAPI.getEO(eoName)\" type=\"text\" [(ngModel)]=\"eoName\" name=\"eoName\" placeholder=\"Input Essential Oil Name\" />\r\n    \r\n  </form>\r\n\r\n  <div class=\"container\">\r\n    <div *ngFor=\"let eo of EOAPI.eoSearch\">\r\n      <p>{{ eo.eo_name }}</p>\r\n      \r\n      <div><img [src]=\"eo.eo_url\" height=\"50%\" width=\"50%\" /></div>\r\n\r\n        <button (click)=\"toggle()\" id=\"bt\"> {{ buttonName }}: </button>\r\n          <ng-container *ngIf=\"show\">\r\n        <div>{{ eo.eo_prop }}</div></ng-container>\r\n      \r\n      <p>Historical Uses: {{ eo.eo_hist_uses }}</p>\r\n      <p>Body Systems: {{ eo.eo_body_sys }}</p>\r\n      <p>Aroma Description: {{ eo.eo_aroma_desc }}</p>\r\n\r\n<h2>Symptoms List</h2>\r\n<p>{{ eo.eo_name }} may be useful on the following symptoms:</p>\r\n<button (click)=\"EOAPI.getEOSymptom(eoName)\">Get Symptoms</button>\r\n<div *ngFor=\"let symp of EOAPI.sympSearch\">\r\n  <p>{{ symp.symp_name }}</p></div>\r\n\r\n\r\n<!-- <ol>\r\n  <li *ngFor=\"let symptom of EOAPI.getEOSymptom(eoName)\">\r\n      <div class=\"item_container\"> \r\n          <p class=\"list\">{{ symptom.symp_name }}</p>\r\n      </div>\r\n  </li>\r\n</ol> -->\r\n<!-- <app-symptom-list>{{ symptom.symp_name }}</app-symptom-list>     -->\r\n      <!-- <app-symptom-list [villager]=\"villager\"\r\n      *ngFor=\"let villager of villagersService.villagers\"></app-symptom-list> -->\r\n    </div>\r\n    \r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { EOAPIService } from '../eo-api.service';\r\nimport { List } from '../eo';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  randomTerm : List [] = [];\r\n\r\n  constructor(public EOAPI: EOAPIService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <img src=\"assets/freelogo.jpg\"> -->\r\n<!-- <h1> eSense - It Makes Scents!</h1> -->\r\n<div class=\"container\">\r\n<div class=\"header\"> \r\n    <h2 id=\"sym\">Symptoms Checker</h2>\r\n    <a href= '/symptoms'> <img src=\"assets/bottleswithherbs.jpg\" alt=\"Symptoms\">\r\n    </a>\r\n</div>\r\n\r\n<div class=\"header\">\r\n    <h2 id=\"eo\">Essential Oils Info</h2>\r\n    <a href= '/eo'> <img src=\"assets/leafdroptobottle.jpg\" alt=\"Essential Oils\">\r\n        <!-- <a href= '/eo'> <img src=\"assets/EO1.jpg\" alt=\"Essential Oils\"> -->\r\n        </a>\r\n</div>\r\n<br>\r\n\r\n<!-- <div class=\"header\">\r\n    <h2 id=\"random\">Get a Random Oil</h2>\r\n    <img src=\"assets/leafdroptobottle.jpg\" (click)=\"EOAPI.getRandom()\">\r\n</div>\r\n<p id=\"random-term\">{{EOAPI.randomTerm.eo_name}}></p> -->\r\n\r\n    <div class=\"header\">\r\n        <h2 id=\"random\">Run the EO Randomizer</h2>\r\n        <!-- <h2 id=\"random\">Not sure what you're looking for?<br>Get a random oil to get started.</h2> -->\r\n        <img src=\"assets/Untitled_Artwork.png\" (click)=\"EOAPI.getRandom()\">\r\n        <!-- <button class=\"random-button\" (click)=\"EOAPI.getRandom()\">RUN THE EO RANDOMIZER</button> -->\r\n      <p id=\"random-term\">{{EOAPI.randomTerm[0].eo_name}}</p> \r\n    </div>\r\n    </div>\r\n<br>\r\n<br>\r\n\r\n<div class=\"container\">\r\n<p id=\"disclaimer\">The information provided on this web site is intended for basic, general informational purposes only. \r\n    It is not intended as medical advice and it does not include all possible precautions, side effects, \r\n    or interactions that may occur. The creators of this website do not take responsibility for how you \r\n    use the information provided. Statements contained on this website have not been evaluated by the FDA. \r\n    You should conduct thorough research via multiple sources and consult directly with a qualified medical professional \r\n    before using any essential oil or product. Information on this website must not be relied upon for medical, \r\n    legal, financial or other decisions.  </p>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { EOAPIService } from '../eo-api.service';\r\nimport { List } from '../eo';\r\n\r\n@Component({\r\n  selector: 'app-symptom-list',\r\n  templateUrl: './symptom-list.component.html',\r\n  styleUrls: ['./symptom-list.component.css']\r\n})\r\nexport class SymptomListComponent implements OnInit {\r\n  public essentialOils: List[];\r\n  public subSearch: List[];\r\n  public sympName : string;\r\n\r\n  constructor(public EOAPI: EOAPIService) { }\r\n\r\n  @Input() eoName;\r\n\r\n  ngOnInit(): void {\r\n    this.EOAPI.getEOSymptom();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"eoName\">\r\n    <p class=\"list\">{{ symptom.symp_name }}</p>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'final-project';\r\n}\r\n","<app-nav></app-nav>\r\n<router-outlet></router-outlet>\r\n<!-- <app-nav></app-nav> -->\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SymptomsComponent } from './symptoms/symptoms.component';\r\nimport { EoComponent } from './eo/eo.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SymptomListComponent } from './symptom-list/symptom-list.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    SymptomsComponent,\r\n    EoComponent,\r\n    NavComponent,\r\n    SymptomListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,  \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  menuIsVisible: boolean = false;\r\n  toggleMenu(): void {\r\n     this.menuIsVisible = !this.menuIsVisible;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"menu-wrapper\">\r\n  <header class=\"header\">\r\n    <a routerLink=\"\"><img id=\"logo\" src=\"assets/eSenseLogo2.png\"></a>\r\n   \r\n   <ul class=\"menu\">\r\n    <li><a routerLink=\"\">Home</a></li>\r\n    <li><a routerLink=\"/symptoms\">Symptom Checker</a></li>\r\n    <li><a routerLink=\"/eo\">Essential Oil Information</a></li>\r\n  </ul>\r\n <!-- </header>\r\n </div>\r\n    <a routerLink=\"\"><img id=\"logo\" src=\"assets/freelogo.jpg\"></a> -->\r\n    <!-- <input class=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\r\n    <label class=\"menu-icon\" for=\"menu-btn\"><span class=\"navicon\"></span></label> -->\r\n  <!-- <div (click)=\"toggleMenu()\"><img id=\"hamburger\" src=\"assets/ham_menu.svg\" alt=\"menu\"></div> -->\r\n    <!-- <ul class=\"menu\"> -->\r\n    <!-- <ul [ngStyle]=\"{'display': menuIsVisible ? 'block': 'none'}\">\r\n      <li><a routerLink=\"\">Home</a></li>\r\n      <li><a routerLink=\"/symptoms\">Symptom Checker</a></li>\r\n      <li><a routerLink=\"/eo\">Essential Oil Information</a></li>\r\n    </ul>\r\n  </header> -->\r\n<!-- </div> -->\r\n<!-- <header>\r\n  <a routerLink=\"\"><img id=\"logo\" src=\"assets/freelogo.jpg\"></a>\r\n<ul>\r\n    <li><a routerLink=\"\">Home</a></li>\r\n    <li><a routerLink=\"/symptoms\">Symptom Checker</a></li>\r\n    <li><a routerLink=\"/eo\">Essential Oil Information</a></li>\r\n  </ul>\r\n</header> -->\r\n\r\n</header>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { List } from './eo';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EOAPIService {\r\n  [x: string]: any;\r\n  public essentialOils: List[] = [];\r\n  public symptoms: List[];\r\n  // public url: string = 'http://localhost:3000/api/';\r\n  public url: string = 'https://group-1-final-project-esense.herokuapp.com/api/';\r\n  eoSearch: List[] = [];\r\n  sympSearch: List[] = [];\r\n  subSearch: List[] = [];\r\n  filter: string = '';\r\n  sympEO: List [] = [];\r\n  randomTerm : List [] = [];\r\n  eoSubArray: List[] = [];\r\n  subSymp: boolean;\r\n  sub_symp: string = '';\r\n  subEoSearch: List [] = [];\r\n  eoSympArray: List [] = [];\r\n  \r\n\r\n  constructor(private http: HttpClient) {\r\n    this.essentialOils = [];\r\n    this.symptoms = [];\r\n    this.subSearch = [];\r\n  }\r\n//to get EOs by Name\r\n  getEO(eoName?: string) {\r\n    if (eoName) { \r\n    this.http.get(this.url + `eo/${eoName}`).subscribe(\r\n      (resp:any) => {\r\n        this.eoSearch = resp\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        } //else bring back all or top 3 EOs\r\n      )\r\n    }\r\n  }\r\n//To get symptoms by EO name\r\n  getEOSymptom(eoName?: string) {\r\n    console.log(\"we are here\")\r\n    if (eoName) { \r\n    this.http.get(this.url + `symptom/${eoName}`).subscribe(\r\n      (resp:any) => {\r\n      \r\n        this.sympSearch = resp\r\n        console.log(this.sympSearch)\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        }\r\n        //add else to return all subsymptoms\r\n      )\r\n    }\r\n  }\r\n//to get ALL oils\r\n  getOil() {\r\n    this.essentialOils = [];\r\n    this.http.get(this.url + 'eo').subscribe(\r\n      (data) => {\r\n        for (const key in data) {\r\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n            const essentialOil = data[key];\r\n            this.essentialOils.push(essentialOil);\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('there is an error');\r\n      }\r\n    );\r\n  }\r\n  getAllSymp() {\r\n   \r\n    this.http.get(this.url + 'symptoms').subscribe(\r\n      (data) => {\r\n        for (const key in data) {\r\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n            const symptom = data[key];\r\n            this.symptoms.push(symptom);\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('there is an error');\r\n      }\r\n    );\r\n  }\r\n//To get symptom by Name\r\n  getSymptom(sympName?: string) {\r\n    if (sympName) { \r\n    this.http.get(this.url + `symptoms/${sympName}`).subscribe(\r\n      (resp:any) => {\r\n        this.sympSearch = resp\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        }\r\n        //add else to return all symptoms\r\n      )\r\n    }\r\n  }\r\n //To get sub symptom by symptom name\r\n  getSubSymptom(sympName?: string) {\r\n    if (sympName) { \r\n    this.http.get(this.url + `subsymptoms/${sympName}`).subscribe(\r\n      (resp:any) => {\r\n        this.subSearch = resp\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        }\r\n        //add else to return all subsymptoms\r\n      )\r\n    }\r\n  }\r\n\r\n // To get EO by Symptom name\r\n  // getSympEO(sympName?: string) {\r\n  \r\n  //   if (sympName) { \r\n  //   this.http.get(this.url + `eobysymp/${sympName}`).subscribe(\r\n  //     (resp:any) => {\r\n      \r\n  //       this.eoSearch = resp\r\n  //       console.log(this.eoSearch)\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //       }\r\n        //add else to return all subsymptoms\r\n  //     )\r\n  //   }\r\n  // }\r\n\r\n    //To get EO by SubSymptom name\r\n//     getSubEO(subSympName?: string) {\r\n//      console.log(subSympName);\r\n//       if (subSympName) { \r\n//       this.http.get(this.url + `eobysub/${subSympName}`).subscribe(\r\n//         (resp:any) => {\r\n        \r\n//           this.subEoSearch = resp\r\n//           console.log(this.subEoSearch)\r\n//         },\r\n//         (error) => {\r\n//           console.log(error);\r\n//           }\r\n//           //add else to return all subsymptoms\r\n//         )\r\n//       }\r\n//     }\r\n// }\r\n    //To get EO by SubSymptom name\r\n    // getSubEO(sub_symp?: string) {\r\n  \r\n    //   if (sub_symp) { \r\n    //    this.http.get(this.url + `eobysub/${sub_symp}`).subscribe(\r\n    //      (resp:any) => {\r\n        \r\n    //        this.eoSearch = resp;\r\n    //        this.subSymp === true;\r\n    //        console.log(this.eoSearch)\r\n    //      },\r\n    //      (error) => {\r\n          \r\n    //        console.log(error);\r\n    //       }\r\n           // add else to return all subsymptoms\r\n    //      )\r\n    //    }\r\n    //  }\r\n    \r\n// To get a Random EO\r\n    getRandom() {\r\n      let randomNumber: number = Math.floor((Math.random() * 69) + 14);\r\n      console.log(randomNumber);\r\n      // let eoId = this.randomTerm[randomNumber];\r\n      if (randomNumber) { \r\n      this.http.get(this.url + `eo/random/${randomNumber}`).subscribe(\r\n        (resp:any) => {\r\n          this.randomTerm[0] = resp[0]\r\n          console.log(this.randomTerm)\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          } \r\n        )\r\n      }\r\n    }\r\n    \r\n    //START To get all oils by symp or sub symp name\r\n    getResults(sympName: string, subName?: string) {\r\n      if (subName) { \r\n        this.http.get(this.url + `eobysub/${subName}`).subscribe(\r\n          (resp:any) => {\r\n          this.eoSubArray = resp;\r\n            console.log(this.eoSubArray);\r\n      })\r\n        }\r\n         else{\r\n              this.http.get(this.url + `eobysymp/${sympName}`).subscribe(\r\n                (resp:any) => {\r\n                  this.eoSubArray = resp;\r\n                  console.log(this.eoSubArray);\r\n                })\r\n          }\r\n          }\r\n    //END\r\n}\r\n    ","import { Component, OnInit } from '@angular/core';\r\nimport { EOAPIService } from '../eo-api.service';\r\nimport { List } from '../eo';\r\n\r\n@Component({\r\n  selector: 'app-symptoms',\r\n  templateUrl: './symptoms.component.html',\r\n  styleUrls: ['./symptoms.component.css']\r\n})\r\nexport class SymptomsComponent implements OnInit {\r\n  public essentialOils: List[];\r\n  public subSearch: List[];\r\n  public sympName : string;\r\n  public selectedValue : string = '';\r\n  public subSymp: boolean;\r\n  public subSympName: string = '';\r\n  public subName: string = '';\r\n  constructor(public EOAPI: EOAPIService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.EOAPI.getAllSymp();\r\n  }\r\n    \r\n\r\n}\r\n","\r\n<h1>Symptoms Checker</h1>\r\n  <form>\r\n  <!-- added getAllSymp to ngOnInit in ts file so the click me button isn't needed -->\r\n    <!-- <button (click)=\"EOAPI.getAllSymp()\"> Click Me getAllSymp </button> -->\r\n  <!-- took out the ngModelChange in the select statement since it's ot used -->\r\n    <!-- <select (ngModelChange)=\"EOAPI.getSubSymptom()\" type=\"select\" [(ngModel)]=\"sympName\" name=\"sympName\" placeholder=\"Input Symptom\"> -->\r\n    <p>Select the Symptom for which you would like more information</p>  \r\n      <select type=\"select\" [(ngModel)]=\"sympName\" name=\"sympName\" placeholder=\"Input Symptom\">\r\n  <!-- added an empty option in dropdown, needs more if we keep it -->\r\n        <option></option> \r\n        <option *ngFor=\"let symp of EOAPI.symptoms\"> {{symp.symp_name}}</option>\r\n      </select>\r\n   <p>If there is a secondary, or more defining symptom, select it here</p>\r\n      <select (click)=\"EOAPI.getSubSymptom(sympName)\" [(ngModel)]=\"subName\" name=\"subName\">\r\n        <option *ngFor=\"let sub of EOAPI.subSearch\" [ngValue]=\"sub.sub_symp\">{{sub.sub_symp}}</option>\r\n    </select>\r\n    <p>Once you have selected a Symptom and/or Secondary Symptom, click here</p>\r\n    <button (click)= \"EOAPI.getSymptom(sympName)\" (click) = \"EOAPI.getResults(sympName, subName)\"> Get Info </button>        \r\n    \r\n    <section *ngFor=\"let item of EOAPI.sympSearch\"> \r\n    <h1>{{item.symp_name}}</h1>       \r\n    <p>{{item.symp_desc}}</p>\r\n    <p> The recommendated oils include: </p>\r\n    <p *ngFor=\"let eos of EOAPI.eoSubArray\"> {{eos.eo_name}}</p>   \r\n    <p> To apply topically: {{item.topical_appl}}</p>\r\n    <p> To use as aroma therapy: {{item.aromatic_appl}}</p>     \r\n                    \r\n  </section>\r\n  \r\n  <!-- <p *ngFor=\"let eos of EOAPI.eoSubArray\">  </p> -->\r\n  <!-- <p *ngFor=\"let item of EOAPI.eoSubArray\"> {{item.eo_name}}</p> -->\r\n  \r\n    ","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\nimport { SymptomsComponent} from './symptoms/symptoms.component';\r\nimport { EoComponent} from './eo/eo.component';\r\n  \r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'symptoms', component: SymptomsComponent},\r\n  {path: 'eo', component: EoComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}